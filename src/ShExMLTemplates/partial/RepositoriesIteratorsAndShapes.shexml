ITERATOR repositories_iterator <jsonpath: $.data.repositories.items[*]> {
	PUSHED_FIELD id <id>
  	FIELD type <type>
	FIELD identifier <identifier>
	PUSHED_FIELD lat <latitude>
	PUSHED_FIELD long <longitude>
	FIELD countryId <country.id>
	ITERATOR descriptions <descriptions[*]> {
		FIELD languageCode <languageCode>
		FIELD name <name>
		FIELD identifier <identifier>
		FIELD typeOfEntity <typeOfEntity>
		FIELD history <history>
		FIELD geoculturalContext <geoculturalContext>
		FIELD mandates <mandates>
		FIELD administrativeStructure <administrativeStructure>
		FIELD records <records>
		FIELD buildings <buildings>
		FIELD holdings <holdings>
		FIELD findingAids <findingAids>
		FIELD openingTimes <openingTimes>
		FIELD conditions <conditions>
		FIELD accessibility <accessibility>
		FIELD researchServices <researchServices>
		FIELD reproductionServices <reproductionServices>
		FIELD publicAreas <publicAreas>
		FIELD rulesAndConventions <rulesAndConventions>
		FIELD status <status>
		FIELD datesOfDescription <datesOfDescription>
		FIELD maintenanceNotes <maintenanceNotes>
		FIELD languages <languages>
		FIELD scripts <scripts>
		FIELD sources <sources>
		POPPED_FIELD repository_id <id>
		ITERATOR addresses <addresses[*]> {
			FIELD contactPerson <contactPerson>
			FIELD addressName <addressName>
			FIELD street <street>
			FIELD municipality <municipality>
			FIELD region <firstdem>
			FIELD countryCode <countryCode>
			FIELD postalCode <postalCode>
			FIELD email <email>
			FIELD telephone <telephone>
			FIELD fax <fax>
			FIELD webpage <webpage>
			POPPED_FIELD lat <lat>
			POPPED_FIELD long <long>
			POPPED_FIELD repository_id <id>
		}
		ITERATOR otherFormsOfName <otherFormsOfName> {
			FIELD name<[*]>
        	POPPED_FIELD repository_id <id>
		}
		ITERATOR parallelFormsOfName <parallelFormsOfName> {
			FIELD name<[*]>
        	POPPED_FIELD repository_id <id>
		}
	}
}

EXPRESSION organization <repositories.repositories_iterator>
EXPRESSION parallel_name_id <repositories.repositories_iterator.descriptions.parallelFormsOfName.repository_id + "/parallelNames/" + repositories.repositories_iterator.descriptions.parallelFormsOfName.name>
EXPRESSION other_name_id <repositories.repositories_iterator.descriptions.otherFormsOfName.repository_id + "/otherNames/" + repositories.repositories_iterator.descriptions.otherFormsOfName.name>


####################
### Repositories ###
####################

ehri:Institution ehri_institutions:[organization.id] {
	a ehri:Institution ;
  	rico:name [organization.descriptions.name] @[organization.descriptions.languageCode MATCHING langcode_two_digit_equivalent] ;
	rico:history [organization.descriptions.history] @[organization.descriptions.languageCode MATCHING langcode_two_digit_equivalent] ;
	schema:openingHours [organization.descriptions.openingTimes] @[organization.descriptions.languageCode MATCHING langcode_two_digit_equivalent] ;
	rico:generalDescription [organization.descriptions.holdings] @[organization.descriptions.languageCode MATCHING langcode_two_digit_equivalent] ;
	ehri:institutionConditionsOfAccess [organization.descriptions.conditions] @[organization.descriptions.languageCode MATCHING langcode_two_digit_equivalent] ;
	ehri:institutionReproductionServices [organization.descriptions.reproductionServices] @[organization.descriptions.languageCode MATCHING langcode_two_digit_equivalent] ;
	ehri:generalContext [organization.descriptions.geoculturalContext] @[organization.descriptions.languageCode MATCHING langcode_two_digit_equivalent] ;
	ehri:administrativeStructure [organization.descriptions.administrativeStructure] @[organization.descriptions.languageCode MATCHING langcode_two_digit_equivalent] ;
	ehri:recordsManagementAndCollectingPolicies [organization.descriptions.records] @[organization.descriptions.languageCode MATCHING langcode_two_digit_equivalent] ;
	ehri:buildings [organization.descriptions.buildings] @[organization.descriptions.languageCode MATCHING langcode_two_digit_equivalent] ;
	ehri:accessibility [organization.descriptions.accessibility] @[organization.descriptions.languageCode MATCHING langcode_two_digit_equivalent] ;
	ehri:researchServices [organization.descriptions.researchServices] @[organization.descriptions.languageCode MATCHING langcode_two_digit_equivalent] ;
	ehri:publicAreas [organization.descriptions.publicAreas] @[organization.descriptions.languageCode MATCHING langcode_two_digit_equivalent] ;
	rdfs:seeAlso [organization.descriptions.addresses.webpage] ;
	ehri:findingAids [organization.descriptions.findingAids] @[organization.descriptions.languageCode MATCHING langcode_two_digit_equivalent] ;
	ehri:sources [organization.descriptions.sources] @[organization.descriptions.languageCode MATCHING langcode_two_digit_equivalent] ;
  	rico:agentHasOrHadLocation @ehri:InstitutionLocation ;
	rico:hasOrHadAgentName @ehri:AgentParallelName ;
	rico:hasOrHadAgentName @ehri:AgentOtherName ;
	rico:authorizedBy @ehri:Mandate ;
}

ehri:InstitutionLocation ehri_institutions:[transformers.combinedPathInstitutionLocation(organization.descriptions.addresses.repository_id, organization.descriptions.addresses.repository_id.index())] { 
	a rico:Place ;
	rico:isOrWasContainedBy @ehri:Region ;
	rico:isOrWasContainedBy @ehri:City ;
	rico:isOrWasContainedBy ehri_countries:[organization.countryId] ;
	rico:hasOrHadPhysicalLocation @ehri:InstitutionAddress ;
}
 
ehri:InstitutionAddress ehri_institutions:[transformers.combinedPathInstitutionAddress(organization.descriptions.addresses.repository_id, organization.descriptions.addresses.repository_id.index())] { 
	a ehri:InstitutionAddress ;
	rico:hasOrHadCoordinates @ehri:Coordinates ;
	schema:postalCode [organization.descriptions.addresses.postalCode] ;
	rico:name [organization.descriptions.addresses.street] ;
	schema:faxNumber [organization.descriptions.addresses.fax] ;
  	schema:telephone [organization.descriptions.addresses.telephone] ;
	schema:email [organization.descriptions.addresses.email] ;
	ehri:contactPerson [organization.descriptions.addresses.contactPerson] ;
	schema:contactType [organization.descriptions.addresses.addressName] ;
	rico:isOrWasPhysicalLocationOf ehri_institutions:[transformers.combinedPathInstitutionLocation(organization.descriptions.addresses.repository_id, organization.descriptions.addresses.repository_id.index())] ;
}

ehri:Coordinates ehri_institutions:[transformers.combinedPathInstitutionCoordinates(organization.descriptions.addresses.repository_id)] {
	a rico:Coordinates ;
	rico:latitude [organization.descriptions.addresses.lat] ;
	rico:longitude [organization.descriptions.addresses.long] ;
	rico:isOrWasCoordinatesOf ehri_institutions:[transformers.combinedPathInstitutionAddress(organization.descriptions.addresses.repository_id, organization.descriptions.addresses.repository_id.index())] ; 
}

ehri:Region ehri_regions:[organization.descriptions.addresses.region] {
	a ehri:Region ;
	rico:name [organization.descriptions.addresses.region] ;
	rico:isOrWasContainedBy ehri_countries:[transformers.toLowerCase(organization.descriptions.addresses.countryCode)] ;
	rico:containsOrContained ehri_cities:[organization.descriptions.addresses.municipality] ;
	# To be implemented owl:sameAs
}

ehri:City ehri_cities:[organization.descriptions.addresses.municipality] {
	a ehri:City ;
	rico:name [organization.descriptions.addresses.municipality] ;
	rico:isOrWasContainedBy ehri_regions:[organization.descriptions.addresses.region] ;
	rico:isOrWasContainedBy ehri_countries:[transformers.toLowerCase(organization.descriptions.addresses.countryCode)] ;
	# To be implemented owl:sameAs
}

ehri:AgentParallelName ehri_institutions:[parallel_name_id] {
	a ehri:ParallelAgentName ;
	rico:name [organization.descriptions.parallelFormsOfName.name] ;
	rico:isOrWasAgentNameOf ehri_institutions:[organization.descriptions.parallelFormsOfName.repository_id] ;
}

ehri:AgentOtherName ehri_institutions:[other_name_id] { 
	a ehri:AlternateAgentName ;
	rico:name [organization.descriptions.otherFormsOfName.name] ;
	rico:isOrWasAgentNameOf ehri_institutions:[organization.descriptions.otherFormsOfName.repository_id] ;
}

ehri:Mandate ehri_institutions:[transformers.combinedPathInstitutionMandates(organization.id) IF validators.nonEmpty(organization.descriptions.mandates)] {
	a rico:Mandate ;
	rico:generalDescription [organization.descriptions.mandates] @[organization.descriptions.languageCode MATCHING langcode_two_digit_equivalent] ;
	rico:authorizes ehri_institutions:[organization.descriptions.repository_id] ;
}

ehri:Country ehri_countries:[transformers.toLowerCase(organization.descriptions.addresses.countryCode)] { 
	a ehri:Country ;
	rico:isOrWasLocationOfAgent ehri_institutions:[organization.descriptions.addresses.repository_id] ;
	rico:containsOrContained ehri_regions:[organization.descriptions.addresses.region] ;
	rico:containsOrContained ehri_cities:[organization.descriptions.addresses.municipality] ;
}